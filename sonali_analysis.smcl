{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz//sonali_analysis.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res}17 Apr 2021, 20:15:11
{txt}
{com}. 
. use "${c -(}datadir{c )-}sonali_data_2010_1.dta", clear 
{txt}
{com}. append using "${c -(}datadir{c )-}sonali_data_2010_2.dta", force
{txt}  {hline 77} begin append {hline}
  - version 11
  - if (_caller() < 11) {c -(}
    local version : di "version " string(_caller()) ":"
    `version' _append `0'
    exit
    {c )-}
  - syntax [anything(everything)] [, GENerate(name) * ]
  - gettoken using filenames : anything
  - if (`"`using'"' != "using") {c -(}
  = if (`"using"' != "using") {c -(}
    di as err "using required"
    exit 100
    {c )-}
  - if (`"`filenames'"' == "") {c -(}
  = if (`" "/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2010_2.dta""' == "") {c -(}
    di as err "invalid file specification"
    exit 198
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture quietly describe using `"`filename'"'
  = capture quietly describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2010_2.dta"'
    {hline 73} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2010_2.dta"'
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 75} end describe {hline}
  - if (_rc) {c -(}
    di as err `"file `filename' not found"'
    exit 601
    {c )-}
  - {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    confirm new var `generate'
    local filenum 0
    gen byte `generate' = `filenum'
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture noisily _append using `"`filename'"', `options'
  = capture noisily _append using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2010_2.dta"', force
{p 0 7 2}
(note: variable
pat_age was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
occur_day_7 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
occur_day_8 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
occur_day_9 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
occur_day_10 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
occur_day_11 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
value_code_8 was byte in the using data, but will be
str2 now)
{p_end}
{p 0 7 2}
(note: variable
value_code_9 was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
spec_unit was 
str3, now str4 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
admitting_diagnosis was 
str5, now str6 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
princ_surg_proc_code was 
str5, now str6 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
princ_icd9_code was 
str4, now str5 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
value_amount_9 was 
byte, now int to accommodate using data's values)
{p_end}
  - if _rc {c -(}
    if ("`generate'" != "") {c -(}
    capture quietly drop if `generate' > 0
    capture quietly drop `generate'
    {c )-}
    exit _rc
    {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    quietly replace `generate' = `filenum' in `filenumpos'/L
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - {c )-}
  {hline 79} end append {hline}

{com}. append using "${c -(}datadir{c )-}sonali_data_2010_3.dta", force
{txt}  {hline 77} begin append {hline}
  - version 11
  - if (_caller() < 11) {c -(}
    local version : di "version " string(_caller()) ":"
    `version' _append `0'
    exit
    {c )-}
  - syntax [anything(everything)] [, GENerate(name) * ]
  - gettoken using filenames : anything
  - if (`"`using'"' != "using") {c -(}
  = if (`"using"' != "using") {c -(}
    di as err "using required"
    exit 100
    {c )-}
  - if (`"`filenames'"' == "") {c -(}
  = if (`" "/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2010_3.dta""' == "") {c -(}
    di as err "invalid file specification"
    exit 198
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture quietly describe using `"`filename'"'
  = capture quietly describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2010_3.dta"'
    {hline 73} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2010_3.dta"'
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 75} end describe {hline}
  - if (_rc) {c -(}
    di as err `"file `filename' not found"'
    exit 601
    {c )-}
  - {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    confirm new var `generate'
    local filenum 0
    gen byte `generate' = `filenum'
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture noisily _append using `"`filename'"', `options'
  = capture noisily _append using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2010_3.dta"', force
{p 0 7 2}
(note: variable
type_of_admission was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
pat_age was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
condition_code_6 was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
value_code_8 was byte in the using data, but will be
str2 now)
{p_end}
{p 0 7 2}
(note: variable
e_code_9 was 
str1, now str5 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
e_code_10 was 
str1, now str5 to accommodate using data's values)
{p_end}
  - if _rc {c -(}
    if ("`generate'" != "") {c -(}
    capture quietly drop if `generate' > 0
    capture quietly drop `generate'
    {c )-}
    exit _rc
    {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    quietly replace `generate' = `filenum' in `filenumpos'/L
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - {c )-}
  {hline 79} end append {hline}

{com}. append using "${c -(}datadir{c )-}sonali_data_2010_4.dta", force
{txt}  {hline 77} begin append {hline}
  - version 11
  - if (_caller() < 11) {c -(}
    local version : di "version " string(_caller()) ":"
    `version' _append `0'
    exit
    {c )-}
  - syntax [anything(everything)] [, GENerate(name) * ]
  - gettoken using filenames : anything
  - if (`"`using'"' != "using") {c -(}
  = if (`"using"' != "using") {c -(}
    di as err "using required"
    exit 100
    {c )-}
  - if (`"`filenames'"' == "") {c -(}
  = if (`" "/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2010_4.dta""' == "") {c -(}
    di as err "invalid file specification"
    exit 198
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture quietly describe using `"`filename'"'
  = capture quietly describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2010_4.dta"'
    {hline 73} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2010_4.dta"'
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 75} end describe {hline}
  - if (_rc) {c -(}
    di as err `"file `filename' not found"'
    exit 601
    {c )-}
  - {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    confirm new var `generate'
    local filenum 0
    gen byte `generate' = `filenum'
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture noisily _append using `"`filename'"', `options'
  = capture noisily _append using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2010_4.dta"', force
{p 0 7 2}
(note: variable
pat_age was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
condition_code_6 was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
occur_day_7 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
occur_code_12 was byte in the using data, but will be
str2 now)
{p_end}
{p 0 7 2}
(note: variable
value_code_7 was byte in the using data, but will be
str2 now)
{p_end}
{p 0 7 2}
(note: variable
value_code_8 was byte in the using data, but will be
str2 now)
{p_end}
{p 0 7 2}
(note: variable
other_icd9_code_2 was 
str4, now str5 to accommodate using data's values)
{p_end}
  - if _rc {c -(}
    if ("`generate'" != "") {c -(}
    capture quietly drop if `generate' > 0
    capture quietly drop `generate'
    {c )-}
    exit _rc
    {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    quietly replace `generate' = `filenum' in `filenumpos'/L
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - {c )-}
  {hline 79} end append {hline}

{com}. append using "${c -(}datadir{c )-}sonali_data_2011_1.dta", force
{txt}  {hline 77} begin append {hline}
  - version 11
  - if (_caller() < 11) {c -(}
    local version : di "version " string(_caller()) ":"
    `version' _append `0'
    exit
    {c )-}
  - syntax [anything(everything)] [, GENerate(name) * ]
  - gettoken using filenames : anything
  - if (`"`using'"' != "using") {c -(}
  = if (`"using"' != "using") {c -(}
    di as err "using required"
    exit 100
    {c )-}
  - if (`"`filenames'"' == "") {c -(}
  = if (`" "/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2011_1.dta""' == "") {c -(}
    di as err "invalid file specification"
    exit 198
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture quietly describe using `"`filename'"'
  = capture quietly describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2011_1.dta"'
    {hline 73} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2011_1.dta"'
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 75} end describe {hline}
  - if (_rc) {c -(}
    di as err `"file `filename' not found"'
    exit 601
    {c )-}
  - {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    confirm new var `generate'
    local filenum 0
    gen byte `generate' = `filenum'
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture noisily _append using `"`filename'"', `options'
  = capture noisily _append using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2011_1.dta"', force
{p 0 7 2}
(note: variable
type_of_admission was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
pat_zip was str5 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
pat_age was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
occur_day_8 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
condition_code_6 was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_teaching_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_rehab_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_acute_care_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_snf_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_long_term_ac_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_other_ltc_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_peds_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
princ_diag_code was 
str5, now str6 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
cms_mdc was 
byte, now float to accommodate using data's values)
{p_end}
  - if _rc {c -(}
    if ("`generate'" != "") {c -(}
    capture quietly drop if `generate' > 0
    capture quietly drop `generate'
    {c )-}
    exit _rc
    {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    quietly replace `generate' = `filenum' in `filenumpos'/L
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - {c )-}
  {hline 79} end append {hline}

{com}. append using "${c -(}datadir{c )-}sonali_data_2011_2.dta", force
{txt}  {hline 77} begin append {hline}
  - version 11
  - if (_caller() < 11) {c -(}
    local version : di "version " string(_caller()) ":"
    `version' _append `0'
    exit
    {c )-}
  - syntax [anything(everything)] [, GENerate(name) * ]
  - gettoken using filenames : anything
  - if (`"`using'"' != "using") {c -(}
  = if (`"using"' != "using") {c -(}
    di as err "using required"
    exit 100
    {c )-}
  - if (`"`filenames'"' == "") {c -(}
  = if (`" "/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2011_2.dta""' == "") {c -(}
    di as err "invalid file specification"
    exit 198
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture quietly describe using `"`filename'"'
  = capture quietly describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2011_2.dta"'
    {hline 73} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2011_2.dta"'
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 75} end describe {hline}
  - if (_rc) {c -(}
    di as err `"file `filename' not found"'
    exit 601
    {c )-}
  - {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    confirm new var `generate'
    local filenum 0
    gen byte `generate' = `filenum'
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture noisily _append using `"`filename'"', `options'
  = capture noisily _append using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2011_2.dta"', force
{p 0 7 2}
(note: variable
spec_unit_4 was byte in the using data, but will be
str1 now)
{p_end}
{p 0 7 2}
(note: variable
pat_zip was str5 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
pat_age was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
occur_day_7 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
condition_code_6 was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
value_code_7 was byte in the using data, but will be
str2 now)
{p_end}
{p 0 7 2}
(note: variable
value_code_8 was byte in the using data, but will be
str2 now)
{p_end}
{p 0 7 2}
(note: variable
fac_teaching_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_rehab_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_acute_care_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_snf_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_long_term_ac_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_other_ltc_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_peds_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
other_icd9_code_1 was 
str4, now str5 to accommodate using data's values)
{p_end}
  - if _rc {c -(}
    if ("`generate'" != "") {c -(}
    capture quietly drop if `generate' > 0
    capture quietly drop `generate'
    {c )-}
    exit _rc
    {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    quietly replace `generate' = `filenum' in `filenumpos'/L
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - {c )-}
  {hline 79} end append {hline}

{com}. append using "${c -(}datadir{c )-}sonali_data_2011_3.dta", force 
{txt}  {hline 77} begin append {hline}
  - version 11
  - if (_caller() < 11) {c -(}
    local version : di "version " string(_caller()) ":"
    `version' _append `0'
    exit
    {c )-}
  - syntax [anything(everything)] [, GENerate(name) * ]
  - gettoken using filenames : anything
  - if (`"`using'"' != "using") {c -(}
  = if (`"using"' != "using") {c -(}
    di as err "using required"
    exit 100
    {c )-}
  - if (`"`filenames'"' == "") {c -(}
  = if (`" "/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2011_3.dta""' == "") {c -(}
    di as err "invalid file specification"
    exit 198
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture quietly describe using `"`filename'"'
  = capture quietly describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2011_3.dta"'
    {hline 73} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2011_3.dta"'
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 75} end describe {hline}
  - if (_rc) {c -(}
    di as err `"file `filename' not found"'
    exit 601
    {c )-}
  - {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    confirm new var `generate'
    local filenum 0
    gen byte `generate' = `filenum'
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture noisily _append using `"`filename'"', `options'
  = capture noisily _append using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2011_3.dta"', force
{p 0 7 2}
(note: variable
pat_zip was str5 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
occur_day_6 was int in the using data, but will be
str4 now)
{p_end}
{p 0 7 2}
(note: variable
occur_day_7 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
condition_code_6 was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
value_code_7 was byte in the using data, but will be
str2 now)
{p_end}
{p 0 7 2}
(note: variable
value_code_8 was byte in the using data, but will be
str2 now)
{p_end}
{p 0 7 2}
(note: variable
fac_teaching_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_rehab_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_acute_care_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_snf_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_long_term_ac_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_other_ltc_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_peds_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
value_amount_5 was 
float, now double to accommodate using data's values)
{p_end}
  - if _rc {c -(}
    if ("`generate'" != "") {c -(}
    capture quietly drop if `generate' > 0
    capture quietly drop `generate'
    {c )-}
    exit _rc
    {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    quietly replace `generate' = `filenum' in `filenumpos'/L
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - {c )-}
  {hline 79} end append {hline}

{com}. append using "${c -(}datadir{c )-}sonali_data_2011_4.dta", force 
{txt}  {hline 77} begin append {hline}
  - version 11
  - if (_caller() < 11) {c -(}
    local version : di "version " string(_caller()) ":"
    `version' _append `0'
    exit
    {c )-}
  - syntax [anything(everything)] [, GENerate(name) * ]
  - gettoken using filenames : anything
  - if (`"`using'"' != "using") {c -(}
  = if (`"using"' != "using") {c -(}
    di as err "using required"
    exit 100
    {c )-}
  - if (`"`filenames'"' == "") {c -(}
  = if (`" "/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2011_4.dta""' == "") {c -(}
    di as err "invalid file specification"
    exit 198
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture quietly describe using `"`filename'"'
  = capture quietly describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2011_4.dta"'
    {hline 73} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2011_4.dta"'
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 75} end describe {hline}
  - if (_rc) {c -(}
    di as err `"file `filename' not found"'
    exit 601
    {c )-}
  - {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    confirm new var `generate'
    local filenum 0
    gen byte `generate' = `filenum'
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture noisily _append using `"`filename'"', `options'
  = capture noisily _append using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2011_4.dta"', force
{p 0 7 2}
(note: variable
type_of_admission was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
spec_unit_4 was byte in the using data, but will be
str1 now)
{p_end}
{p 0 7 2}
(note: variable
pat_zip was str5 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
pat_age was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
condition_code_6 was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
value_code_8 was byte in the using data, but will be
str2 now)
{p_end}
{p 0 7 2}
(note: variable
fac_teaching_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_rehab_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_acute_care_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_snf_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_long_term_ac_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_other_ltc_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_peds_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
e_code_1 was 
str5, now str6 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
other_icd9_code_3 was 
str4, now str5 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
other_icd9_code_4 was 
str4, now str5 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
other_icd9_code_5 was 
str4, now str5 to accommodate using data's values)
{p_end}
  - if _rc {c -(}
    if ("`generate'" != "") {c -(}
    capture quietly drop if `generate' > 0
    capture quietly drop `generate'
    {c )-}
    exit _rc
    {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    quietly replace `generate' = `filenum' in `filenumpos'/L
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - {c )-}
  {hline 79} end append {hline}

{com}. append using "${c -(}datadir{c )-}sonali_data_2012_1.dta", force 
{txt}  {hline 77} begin append {hline}
  - version 11
  - if (_caller() < 11) {c -(}
    local version : di "version " string(_caller()) ":"
    `version' _append `0'
    exit
    {c )-}
  - syntax [anything(everything)] [, GENerate(name) * ]
  - gettoken using filenames : anything
  - if (`"`using'"' != "using") {c -(}
  = if (`"using"' != "using") {c -(}
    di as err "using required"
    exit 100
    {c )-}
  - if (`"`filenames'"' == "") {c -(}
  = if (`" "/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2012_1.dta""' == "") {c -(}
    di as err "invalid file specification"
    exit 198
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture quietly describe using `"`filename'"'
  = capture quietly describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2012_1.dta"'
    {hline 73} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2012_1.dta"'
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 75} end describe {hline}
  - if (_rc) {c -(}
    di as err `"file `filename' not found"'
    exit 601
    {c )-}
  - {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    confirm new var `generate'
    local filenum 0
    gen byte `generate' = `filenum'
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture noisily _append using `"`filename'"', `options'
  = capture noisily _append using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2012_1.dta"', force
{p 0 7 2}
(note: variable
spec_unit_4 was byte in the using data, but will be
str1 now)
{p_end}
{p 0 7 2}
(note: variable
pat_zip was str5 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_1 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_2 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_3 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_4 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_5 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_6 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_7 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
occur_day_7 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
fac_teaching_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_rehab_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_acute_care_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_snf_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_long_term_ac_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_other_ltc_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_peds_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
value_amount_4 was 
float, now double to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
value_amount_8 was 
int, now long to accommodate using data's values)
{p_end}
  - if _rc {c -(}
    if ("`generate'" != "") {c -(}
    capture quietly drop if `generate' > 0
    capture quietly drop `generate'
    {c )-}
    exit _rc
    {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    quietly replace `generate' = `filenum' in `filenumpos'/L
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - {c )-}
  {hline 79} end append {hline}

{com}. append using "${c -(}datadir{c )-}sonali_data_2012_2.dta", force 
{txt}  {hline 77} begin append {hline}
  - version 11
  - if (_caller() < 11) {c -(}
    local version : di "version " string(_caller()) ":"
    `version' _append `0'
    exit
    {c )-}
  - syntax [anything(everything)] [, GENerate(name) * ]
  - gettoken using filenames : anything
  - if (`"`using'"' != "using") {c -(}
  = if (`"using"' != "using") {c -(}
    di as err "using required"
    exit 100
    {c )-}
  - if (`"`filenames'"' == "") {c -(}
  = if (`" "/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2012_2.dta""' == "") {c -(}
    di as err "invalid file specification"
    exit 198
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture quietly describe using `"`filename'"'
  = capture quietly describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2012_2.dta"'
    {hline 73} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2012_2.dta"'
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 75} end describe {hline}
  - if (_rc) {c -(}
    di as err `"file `filename' not found"'
    exit 601
    {c )-}
  - {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    confirm new var `generate'
    local filenum 0
    gen byte `generate' = `filenum'
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture noisily _append using `"`filename'"', `options'
  = capture noisily _append using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2012_2.dta"', force
{p 0 7 2}
(note: variable
type_of_admission was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
spec_unit_4 was byte in the using data, but will be
str1 now)
{p_end}
{p 0 7 2}
(note: variable
pat_zip was str5 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
pat_age was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_1 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_2 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_3 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_4 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_5 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_6 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_7 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_8 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_10 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
occur_day_7 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_from_2 was int in the using data, but will be
str6 now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_thru_2 was byte in the using data, but will be
str6 now)
{p_end}
{p 0 7 2}
(note: variable
value_code_7 was byte in the using data, but will be
str2 now)
{p_end}
{p 0 7 2}
(note: variable
value_code_8 was byte in the using data, but will be
str2 now)
{p_end}
{p 0 7 2}
(note: variable
fac_teaching_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_rehab_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_acute_care_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_snf_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_long_term_ac_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_other_ltc_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_peds_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
other_diag_code_2 was 
str5, now str6 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
other_diag_code_3 was 
str5, now str6 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
other_diag_code_5 was 
str5, now str6 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
other_diag_code_8 was 
str5, now str6 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
other_diag_code_9 was 
str5, now str6 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
other_diag_code_10 was 
str5, now str6 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
other_diag_code_12 was 
str5, now str6 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
other_diag_code_15 was 
str5, now str6 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
other_diag_code_16 was 
str5, now str6 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
other_diag_code_17 was 
str5, now str6 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
other_icd9_code_6 was 
str4, now str5 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
other_icd9_code_7 was 
str4, now str5 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
other_icd9_code_8 was 
str4, now str5 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
other_icd9_code_9 was 
str4, now str5 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
other_icd9_code_10 was 
str4, now str5 to accommodate using data's values)
{p_end}
  - if _rc {c -(}
    if ("`generate'" != "") {c -(}
    capture quietly drop if `generate' > 0
    capture quietly drop `generate'
    {c )-}
    exit _rc
    {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    quietly replace `generate' = `filenum' in `filenumpos'/L
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - {c )-}
  {hline 79} end append {hline}

{com}. append using "${c -(}datadir{c )-}sonali_data_2012_3.dta", force 
{txt}  {hline 77} begin append {hline}
  - version 11
  - if (_caller() < 11) {c -(}
    local version : di "version " string(_caller()) ":"
    `version' _append `0'
    exit
    {c )-}
  - syntax [anything(everything)] [, GENerate(name) * ]
  - gettoken using filenames : anything
  - if (`"`using'"' != "using") {c -(}
  = if (`"using"' != "using") {c -(}
    di as err "using required"
    exit 100
    {c )-}
  - if (`"`filenames'"' == "") {c -(}
  = if (`" "/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2012_3.dta""' == "") {c -(}
    di as err "invalid file specification"
    exit 198
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture quietly describe using `"`filename'"'
  = capture quietly describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2012_3.dta"'
    {hline 73} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2012_3.dta"'
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 75} end describe {hline}
  - if (_rc) {c -(}
    di as err `"file `filename' not found"'
    exit 601
    {c )-}
  - {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    confirm new var `generate'
    local filenum 0
    gen byte `generate' = `filenum'
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture noisily _append using `"`filename'"', `options'
  = capture noisily _append using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2012_3.dta"', force
{p 0 7 2}
(note: variable
spec_unit_4 was byte in the using data, but will be
str1 now)
{p_end}
{p 0 7 2}
(note: variable
pat_zip was str5 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_1 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_2 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_3 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_4 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_5 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_6 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_7 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_8 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_9 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_10 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
occur_day_6 was int in the using data, but will be
str4 now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_from_2 was int in the using data, but will be
str6 now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_thru_2 was byte in the using data, but will be
str6 now)
{p_end}
{p 0 7 2}
(note: variable
condition_code_5 was byte in the using data, but will be
str2 now)
{p_end}
{p 0 7 2}
(note: variable
value_code_6 was byte in the using data, but will be
str2 now)
{p_end}
{p 0 7 2}
(note: variable
value_code_7 was byte in the using data, but will be
str2 now)
{p_end}
{p 0 7 2}
(note: variable
value_code_8 was byte in the using data, but will be
str2 now)
{p_end}
{p 0 7 2}
(note: variable
fac_teaching_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_rehab_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_acute_care_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_snf_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_long_term_ac_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_other_ltc_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_peds_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
other_icd9_code_11 was 
str4, now str5 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
other_icd9_code_12 was 
str4, now str5 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
other_icd9_code_20 was 
str4, now str5 to accommodate using data's values)
{p_end}
  - if _rc {c -(}
    if ("`generate'" != "") {c -(}
    capture quietly drop if `generate' > 0
    capture quietly drop `generate'
    {c )-}
    exit _rc
    {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    quietly replace `generate' = `filenum' in `filenumpos'/L
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - {c )-}
  {hline 79} end append {hline}

{com}. append using "${c -(}datadir{c )-}sonali_data_2012_4.dta", force 
{txt}  {hline 77} begin append {hline}
  - version 11
  - if (_caller() < 11) {c -(}
    local version : di "version " string(_caller()) ":"
    `version' _append `0'
    exit
    {c )-}
  - syntax [anything(everything)] [, GENerate(name) * ]
  - gettoken using filenames : anything
  - if (`"`using'"' != "using") {c -(}
  = if (`"using"' != "using") {c -(}
    di as err "using required"
    exit 100
    {c )-}
  - if (`"`filenames'"' == "") {c -(}
  = if (`" "/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2012_4.dta""' == "") {c -(}
    di as err "invalid file specification"
    exit 198
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture quietly describe using `"`filename'"'
  = capture quietly describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2012_4.dta"'
    {hline 73} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2012_4.dta"'
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 75} end describe {hline}
  - if (_rc) {c -(}
    di as err `"file `filename' not found"'
    exit 601
    {c )-}
  - {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    confirm new var `generate'
    local filenum 0
    gen byte `generate' = `filenum'
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture noisily _append using `"`filename'"', `options'
  = capture noisily _append using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2012_4.dta"', force
{p 0 7 2}
(note: variable
type_of_admission was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
spec_unit_4 was byte in the using data, but will be
str1 now)
{p_end}
{p 0 7 2}
(note: variable
pat_zip was str5 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_1 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_2 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_3 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_4 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_5 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_6 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_7 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_8 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
occur_day_6 was int in the using data, but will be
str4 now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_from_2 was byte in the using data, but will be
str6 now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_thru_2 was byte in the using data, but will be
str6 now)
{p_end}
{p 0 7 2}
(note: variable
value_code_8 was byte in the using data, but will be
str2 now)
{p_end}
{p 0 7 2}
(note: variable
fac_teaching_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_rehab_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_acute_care_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_snf_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_long_term_ac_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_other_ltc_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_peds_ind was str1 in the using data, but will be
byte now)
{p_end}
  - if _rc {c -(}
    if ("`generate'" != "") {c -(}
    capture quietly drop if `generate' > 0
    capture quietly drop `generate'
    {c )-}
    exit _rc
    {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    quietly replace `generate' = `filenum' in `filenumpos'/L
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - {c )-}
  {hline 79} end append {hline}

{com}. append using "${c -(}datadir{c )-}sonali_data_2013_1.dta", force 
{txt}  {hline 77} begin append {hline}
  - version 11
  - if (_caller() < 11) {c -(}
    local version : di "version " string(_caller()) ":"
    `version' _append `0'
    exit
    {c )-}
  - syntax [anything(everything)] [, GENerate(name) * ]
  - gettoken using filenames : anything
  - if (`"`using'"' != "using") {c -(}
  = if (`"using"' != "using") {c -(}
    di as err "using required"
    exit 100
    {c )-}
  - if (`"`filenames'"' == "") {c -(}
  = if (`" "/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2013_1.dta""' == "") {c -(}
    di as err "invalid file specification"
    exit 198
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture quietly describe using `"`filename'"'
  = capture quietly describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2013_1.dta"'
    {hline 73} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2013_1.dta"'
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 75} end describe {hline}
  - if (_rc) {c -(}
    di as err `"file `filename' not found"'
    exit 601
    {c )-}
  - {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    confirm new var `generate'
    local filenum 0
    gen byte `generate' = `filenum'
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture noisily _append using `"`filename'"', `options'
  = capture noisily _append using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2013_1.dta"', force
{p 0 7 2}
(note: variable
spec_unit_4 was byte in the using data, but will be
str1 now)
{p_end}
{p 0 7 2}
(note: variable
pat_zip was str5 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_1 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_2 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_3 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_4 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_5 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_6 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_7 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_8 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_9 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
occur_day_6 was int in the using data, but will be
str4 now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_from_2 was byte in the using data, but will be
str6 now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_thru_2 was byte in the using data, but will be
str6 now)
{p_end}
{p 0 7 2}
(note: variable
fac_teaching_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_rehab_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_acute_care_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_snf_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_long_term_ac_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_other_ltc_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_peds_ind was str1 in the using data, but will be
byte now)
{p_end}
  - if _rc {c -(}
    if ("`generate'" != "") {c -(}
    capture quietly drop if `generate' > 0
    capture quietly drop `generate'
    {c )-}
    exit _rc
    {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    quietly replace `generate' = `filenum' in `filenumpos'/L
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - {c )-}
  {hline 79} end append {hline}

{com}. append using "${c -(}datadir{c )-}sonali_data_2013_2.dta", force 
{txt}  {hline 77} begin append {hline}
  - version 11
  - if (_caller() < 11) {c -(}
    local version : di "version " string(_caller()) ":"
    `version' _append `0'
    exit
    {c )-}
  - syntax [anything(everything)] [, GENerate(name) * ]
  - gettoken using filenames : anything
  - if (`"`using'"' != "using") {c -(}
  = if (`"using"' != "using") {c -(}
    di as err "using required"
    exit 100
    {c )-}
  - if (`"`filenames'"' == "") {c -(}
  = if (`" "/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2013_2.dta""' == "") {c -(}
    di as err "invalid file specification"
    exit 198
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture quietly describe using `"`filename'"'
  = capture quietly describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2013_2.dta"'
    {hline 73} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2013_2.dta"'
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 75} end describe {hline}
  - if (_rc) {c -(}
    di as err `"file `filename' not found"'
    exit 601
    {c )-}
  - {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    confirm new var `generate'
    local filenum 0
    gen byte `generate' = `filenum'
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture noisily _append using `"`filename'"', `options'
  = capture noisily _append using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2013_2.dta"', force
{p 0 7 2}
(note: variable
type_of_admission was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
spec_unit_4 was byte in the using data, but will be
str1 now)
{p_end}
{p 0 7 2}
(note: variable
pat_zip was str5 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
pat_age was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_1 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_2 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_3 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_4 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_5 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_6 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_7 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_8 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_9 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_10 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_3 was long in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_3 was long in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_4 was long in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_4 was long in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_7 was long in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_7 was long in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_8 was long in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_8 was long in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_9 was long in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_9 was long in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_14 was int in the using data, but will be
str4 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_15 was int in the using data, but will be
str4 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_16 was int in the using data, but will be
str4 now)
{p_end}
{p 0 7 2}
(note: variable
occur_day_6 was int in the using data, but will be
str4 now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_from_2 was byte in the using data, but will be
str6 now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_thru_2 was byte in the using data, but will be
str6 now)
{p_end}
{p 0 7 2}
(note: variable
condition_code_7 was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
value_code_6 was byte in the using data, but will be
str2 now)
{p_end}
{p 0 7 2}
(note: variable
value_code_7 was byte in the using data, but will be
str2 now)
{p_end}
{p 0 7 2}
(note: variable
value_code_8 was byte in the using data, but will be
str2 now)
{p_end}
{p 0 7 2}
(note: variable
fac_teaching_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_rehab_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_acute_care_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_snf_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_long_term_ac_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_other_ltc_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_peds_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
ward_amount was 
float, now double to accommodate using data's values)
{p_end}
  - if _rc {c -(}
    if ("`generate'" != "") {c -(}
    capture quietly drop if `generate' > 0
    capture quietly drop `generate'
    {c )-}
    exit _rc
    {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    quietly replace `generate' = `filenum' in `filenumpos'/L
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - {c )-}
  {hline 79} end append {hline}

{com}. append using "${c -(}datadir{c )-}sonali_data_2013_3.dta", force 
{txt}  {hline 77} begin append {hline}
  - version 11
  - if (_caller() < 11) {c -(}
    local version : di "version " string(_caller()) ":"
    `version' _append `0'
    exit
    {c )-}
  - syntax [anything(everything)] [, GENerate(name) * ]
  - gettoken using filenames : anything
  - if (`"`using'"' != "using") {c -(}
  = if (`"using"' != "using") {c -(}
    di as err "using required"
    exit 100
    {c )-}
  - if (`"`filenames'"' == "") {c -(}
  = if (`" "/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2013_3.dta""' == "") {c -(}
    di as err "invalid file specification"
    exit 198
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture quietly describe using `"`filename'"'
  = capture quietly describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2013_3.dta"'
    {hline 73} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2013_3.dta"'
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 75} end describe {hline}
  - if (_rc) {c -(}
    di as err `"file `filename' not found"'
    exit 601
    {c )-}
  - {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    confirm new var `generate'
    local filenum 0
    gen byte `generate' = `filenum'
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture noisily _append using `"`filename'"', `options'
  = capture noisily _append using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2013_3.dta"', force
{p 0 7 2}
(note: variable
type_of_admission was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
spec_unit_4 was byte in the using data, but will be
str1 now)
{p_end}
{p 0 7 2}
(note: variable
pat_zip was str5 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
pat_age was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_1 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_2 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_3 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_4 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_5 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_6 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_7 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_8 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_9 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_10 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_4 was long in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_4 was long in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_6 was str5 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_6 was str5 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_7 was long in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_7 was long in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_8 was long in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_8 was long in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_10 was long in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_10 was long in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_13 was str5 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_14 was str5 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_17 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_18 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_19 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_20 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
occur_day_6 was int in the using data, but will be
str4 now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_from_2 was byte in the using data, but will be
str6 now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_thru_2 was byte in the using data, but will be
str6 now)
{p_end}
{p 0 7 2}
(note: variable
condition_code_6 was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
condition_code_7 was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
value_code_6 was byte in the using data, but will be
str2 now)
{p_end}
{p 0 7 2}
(note: variable
value_code_7 was byte in the using data, but will be
str2 now)
{p_end}
{p 0 7 2}
(note: variable
value_code_8 was byte in the using data, but will be
str2 now)
{p_end}
{p 0 7 2}
(note: variable
fac_teaching_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_rehab_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_acute_care_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_snf_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_long_term_ac_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_other_ltc_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_peds_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_17 was 
int, now long to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_18 was 
int, now long to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_19 was 
int, now long to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_20 was 
int, now long to accommodate using data's values)
{p_end}
  - if _rc {c -(}
    if ("`generate'" != "") {c -(}
    capture quietly drop if `generate' > 0
    capture quietly drop `generate'
    {c )-}
    exit _rc
    {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    quietly replace `generate' = `filenum' in `filenumpos'/L
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - {c )-}
  {hline 79} end append {hline}

{com}. append using "${c -(}datadir{c )-}sonali_data_2013_4.dta", force 
{txt}  {hline 77} begin append {hline}
  - version 11
  - if (_caller() < 11) {c -(}
    local version : di "version " string(_caller()) ":"
    `version' _append `0'
    exit
    {c )-}
  - syntax [anything(everything)] [, GENerate(name) * ]
  - gettoken using filenames : anything
  - if (`"`using'"' != "using") {c -(}
  = if (`"using"' != "using") {c -(}
    di as err "using required"
    exit 100
    {c )-}
  - if (`"`filenames'"' == "") {c -(}
  = if (`" "/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2013_4.dta""' == "") {c -(}
    di as err "invalid file specification"
    exit 198
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture quietly describe using `"`filename'"'
  = capture quietly describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2013_4.dta"'
    {hline 73} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2013_4.dta"'
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 75} end describe {hline}
  - if (_rc) {c -(}
    di as err `"file `filename' not found"'
    exit 601
    {c )-}
  - {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    confirm new var `generate'
    local filenum 0
    gen byte `generate' = `filenum'
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture noisily _append using `"`filename'"', `options'
  = capture noisily _append using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2013_4.dta"', force
{p 0 7 2}
(note: variable
type_of_admission was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
spec_unit_4 was byte in the using data, but will be
str1 now)
{p_end}
{p 0 7 2}
(note: variable
pat_zip was str5 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_1 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_2 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_3 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_4 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_5 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_6 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_7 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_8 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_9 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_10 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_3 was long in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_3 was long in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_7 was long in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_7 was long in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_8 was long in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_8 was long in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_11 was str5 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_11 was str5 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_12 was str5 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_12 was str5 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_13 was str5 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_14 was str5 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
occur_day_6 was int in the using data, but will be
str4 now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_from_2 was byte in the using data, but will be
str6 now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_thru_2 was byte in the using data, but will be
str6 now)
{p_end}
{p 0 7 2}
(note: variable
condition_code_6 was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
condition_code_7 was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
value_code_6 was byte in the using data, but will be
str2 now)
{p_end}
{p 0 7 2}
(note: variable
value_code_7 was byte in the using data, but will be
str2 now)
{p_end}
{p 0 7 2}
(note: variable
value_code_8 was byte in the using data, but will be
str2 now)
{p_end}
{p 0 7 2}
(note: variable
fac_teaching_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_rehab_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_acute_care_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_snf_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_long_term_ac_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_other_ltc_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_peds_ind was str1 in the using data, but will be
byte now)
{p_end}
  - if _rc {c -(}
    if ("`generate'" != "") {c -(}
    capture quietly drop if `generate' > 0
    capture quietly drop `generate'
    {c )-}
    exit _rc
    {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    quietly replace `generate' = `filenum' in `filenumpos'/L
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - {c )-}
  {hline 79} end append {hline}

{com}. append using "${c -(}datadir{c )-}sonali_data_2014_1.dta", force 
{txt}  {hline 77} begin append {hline}
  - version 11
  - if (_caller() < 11) {c -(}
    local version : di "version " string(_caller()) ":"
    `version' _append `0'
    exit
    {c )-}
  - syntax [anything(everything)] [, GENerate(name) * ]
  - gettoken using filenames : anything
  - if (`"`using'"' != "using") {c -(}
  = if (`"using"' != "using") {c -(}
    di as err "using required"
    exit 100
    {c )-}
  - if (`"`filenames'"' == "") {c -(}
  = if (`" "/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2014_1.dta""' == "") {c -(}
    di as err "invalid file specification"
    exit 198
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture quietly describe using `"`filename'"'
  = capture quietly describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2014_1.dta"'
    {hline 73} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2014_1.dta"'
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 75} end describe {hline}
  - if (_rc) {c -(}
    di as err `"file `filename' not found"'
    exit 601
    {c )-}
  - {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    confirm new var `generate'
    local filenum 0
    gen byte `generate' = `filenum'
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture noisily _append using `"`filename'"', `options'
  = capture noisily _append using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2014_1.dta"', force
{p 0 7 2}
(note: variable
type_of_admission was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
pat_zip was str5 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_1 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_2 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_3 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_4 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_5 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_6 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_7 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_8 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
e_code_10 was byte in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_7 was long in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_7 was long in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_11 was str5 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_11 was str5 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_12 was str5 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_12 was str5 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_13 was str5 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_14 was str5 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_15 was str5 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_17 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_18 was str5 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_18 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_19 was str5 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_19 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_20 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_21 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_22 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_23 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_24 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
occur_day_6 was int in the using data, but will be
str4 now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_from_2 was byte in the using data, but will be
str6 now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_thru_2 was byte in the using data, but will be
str6 now)
{p_end}
{p 0 7 2}
(note: variable
condition_code_6 was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
condition_code_7 was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
value_code_6 was byte in the using data, but will be
str2 now)
{p_end}
{p 0 7 2}
(note: variable
value_code_7 was byte in the using data, but will be
str2 now)
{p_end}
{p 0 7 2}
(note: variable
value_code_8 was byte in the using data, but will be
str2 now)
{p_end}
{p 0 7 2}
(note: variable
fac_teaching_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_rehab_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_acute_care_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_snf_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_long_term_ac_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_other_ltc_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_peds_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_21 was 
int, now long to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_22 was 
int, now long to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_23 was 
int, now long to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_24 was 
int, now long to accommodate using data's values)
{p_end}
  - if _rc {c -(}
    if ("`generate'" != "") {c -(}
    capture quietly drop if `generate' > 0
    capture quietly drop `generate'
    {c )-}
    exit _rc
    {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    quietly replace `generate' = `filenum' in `filenumpos'/L
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - {c )-}
  {hline 79} end append {hline}

{com}. append using "${c -(}datadir{c )-}sonali_data_2014_2.dta", force 
{txt}  {hline 77} begin append {hline}
  - version 11
  - if (_caller() < 11) {c -(}
    local version : di "version " string(_caller()) ":"
    `version' _append `0'
    exit
    {c )-}
  - syntax [anything(everything)] [, GENerate(name) * ]
  - gettoken using filenames : anything
  - if (`"`using'"' != "using") {c -(}
  = if (`"using"' != "using") {c -(}
    di as err "using required"
    exit 100
    {c )-}
  - if (`"`filenames'"' == "") {c -(}
  = if (`" "/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2014_2.dta""' == "") {c -(}
    di as err "invalid file specification"
    exit 198
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture quietly describe using `"`filename'"'
  = capture quietly describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2014_2.dta"'
    {hline 73} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2014_2.dta"'
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 75} end describe {hline}
  - if (_rc) {c -(}
    di as err `"file `filename' not found"'
    exit 601
    {c )-}
  - {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    confirm new var `generate'
    local filenum 0
    gen byte `generate' = `filenum'
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture noisily _append using `"`filename'"', `options'
  = capture noisily _append using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2014_2.dta"', force
{p 0 7 2}
(note: variable
spec_unit_4 was byte in the using data, but will be
str1 now)
{p_end}
{p 0 7 2}
(note: variable
pat_zip was str5 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
pat_age was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_1 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_2 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_3 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_4 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_5 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_6 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_7 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_8 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
e_code_9 was byte in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
e_code_10 was byte in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_1 was long in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_2 was long in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_3 was long in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_3 was long in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_4 was long in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_4 was long in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_7 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_7 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_8 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_8 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_9 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_9 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_10 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_10 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_13 was int in the using data, but will be
str4 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_14 was int in the using data, but will be
str4 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_15 was int in the using data, but will be
str4 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_16 was int in the using data, but will be
str4 now)
{p_end}
{p 0 7 2}
(note: variable
occur_day_6 was int in the using data, but will be
str4 now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_from_2 was byte in the using data, but will be
str6 now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_thru_2 was byte in the using data, but will be
str6 now)
{p_end}
{p 0 7 2}
(note: variable
condition_code_6 was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
condition_code_7 was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
value_code_6 was byte in the using data, but will be
str2 now)
{p_end}
{p 0 7 2}
(note: variable
value_code_7 was byte in the using data, but will be
str2 now)
{p_end}
{p 0 7 2}
(note: variable
value_code_8 was byte in the using data, but will be
str2 now)
{p_end}
{p 0 7 2}
(note: variable
fac_teaching_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_rehab_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_acute_care_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_snf_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_long_term_ac_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_other_ltc_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_peds_ind was str1 in the using data, but will be
byte now)
{p_end}
  - if _rc {c -(}
    if ("`generate'" != "") {c -(}
    capture quietly drop if `generate' > 0
    capture quietly drop `generate'
    {c )-}
    exit _rc
    {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    quietly replace `generate' = `filenum' in `filenumpos'/L
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - {c )-}
  {hline 79} end append {hline}

{com}. append using "${c -(}datadir{c )-}sonali_data_2014_3.dta", force 
{txt}  {hline 77} begin append {hline}
  - version 11
  - if (_caller() < 11) {c -(}
    local version : di "version " string(_caller()) ":"
    `version' _append `0'
    exit
    {c )-}
  - syntax [anything(everything)] [, GENerate(name) * ]
  - gettoken using filenames : anything
  - if (`"`using'"' != "using") {c -(}
  = if (`"using"' != "using") {c -(}
    di as err "using required"
    exit 100
    {c )-}
  - if (`"`filenames'"' == "") {c -(}
  = if (`" "/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2014_3.dta""' == "") {c -(}
    di as err "invalid file specification"
    exit 198
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture quietly describe using `"`filename'"'
  = capture quietly describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2014_3.dta"'
    {hline 73} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2014_3.dta"'
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 75} end describe {hline}
  - if (_rc) {c -(}
    di as err `"file `filename' not found"'
    exit 601
    {c )-}
  - {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    confirm new var `generate'
    local filenum 0
    gen byte `generate' = `filenum'
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture noisily _append using `"`filename'"', `options'
  = capture noisily _append using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2014_3.dta"', force
{p 0 7 2}
(note: variable
type_of_admission was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
spec_unit_4 was byte in the using data, but will be
str1 now)
{p_end}
{p 0 7 2}
(note: variable
pat_zip was str5 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
pat_age was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_1 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_2 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_3 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_4 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_5 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_6 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_7 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_8 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_9 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_10 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
princ_surg_proc_code was int in the using data, but will be
str6 now)
{p_end}
{p 0 7 2}
(note: variable
princ_icd9_code was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_1 was long in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_2 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_2 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_3 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_3 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_4 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_4 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_7 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_7 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_8 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_8 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_9 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_9 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_10 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_10 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_13 was int in the using data, but will be
str4 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_14 was int in the using data, but will be
str4 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_15 was int in the using data, but will be
str4 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_16 was int in the using data, but will be
str4 now)
{p_end}
{p 0 7 2}
(note: variable
occur_day_7 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
occur_day_8 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_from_2 was byte in the using data, but will be
str6 now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_thru_2 was byte in the using data, but will be
str6 now)
{p_end}
{p 0 7 2}
(note: variable
condition_code_6 was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
value_code_6 was byte in the using data, but will be
str2 now)
{p_end}
{p 0 7 2}
(note: variable
value_code_7 was byte in the using data, but will be
str2 now)
{p_end}
{p 0 7 2}
(note: variable
value_code_8 was byte in the using data, but will be
str2 now)
{p_end}
{p 0 7 2}
(note: variable
fac_teaching_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_rehab_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_acute_care_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_snf_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_long_term_ac_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_other_ltc_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_peds_ind was str1 in the using data, but will be
byte now)
{p_end}
  - if _rc {c -(}
    if ("`generate'" != "") {c -(}
    capture quietly drop if `generate' > 0
    capture quietly drop `generate'
    {c )-}
    exit _rc
    {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    quietly replace `generate' = `filenum' in `filenumpos'/L
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - {c )-}
  {hline 79} end append {hline}

{com}. append using "${c -(}datadir{c )-}sonali_data_2014_4.dta", force 
{txt}  {hline 77} begin append {hline}
  - version 11
  - if (_caller() < 11) {c -(}
    local version : di "version " string(_caller()) ":"
    `version' _append `0'
    exit
    {c )-}
  - syntax [anything(everything)] [, GENerate(name) * ]
  - gettoken using filenames : anything
  - if (`"`using'"' != "using") {c -(}
  = if (`"using"' != "using") {c -(}
    di as err "using required"
    exit 100
    {c )-}
  - if (`"`filenames'"' == "") {c -(}
  = if (`" "/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2014_4.dta""' == "") {c -(}
    di as err "invalid file specification"
    exit 198
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture quietly describe using `"`filename'"'
  = capture quietly describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2014_4.dta"'
    {hline 73} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2014_4.dta"'
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 75} end describe {hline}
  - if (_rc) {c -(}
    di as err `"file `filename' not found"'
    exit 601
    {c )-}
  - {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    confirm new var `generate'
    local filenum 0
    gen byte `generate' = `filenum'
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture noisily _append using `"`filename'"', `options'
  = capture noisily _append using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2014_4.dta"', force
{p 0 7 2}
(note: variable
type_of_admission was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
pat_zip was str5 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
pat_age was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_1 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_2 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_3 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_4 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_5 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_6 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_7 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_8 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_9 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_10 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
princ_surg_proc_code was long in the using data, but will be
str6 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_1 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_1 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_2 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_2 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_3 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_3 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_4 was long in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_4 was long in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_7 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_7 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_8 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_8 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_9 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_9 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_10 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_10 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_13 was int in the using data, but will be
str4 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_14 was int in the using data, but will be
str4 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_15 was int in the using data, but will be
str4 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_16 was int in the using data, but will be
str4 now)
{p_end}
{p 0 7 2}
(note: variable
occur_day_6 was int in the using data, but will be
str4 now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_from_2 was byte in the using data, but will be
str6 now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_thru_2 was byte in the using data, but will be
str6 now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_code_3 was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
condition_code_6 was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
condition_code_7 was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
value_code_6 was byte in the using data, but will be
str2 now)
{p_end}
{p 0 7 2}
(note: variable
value_code_7 was byte in the using data, but will be
str2 now)
{p_end}
{p 0 7 2}
(note: variable
value_code_8 was byte in the using data, but will be
str2 now)
{p_end}
{p 0 7 2}
(note: variable
fac_teaching_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_rehab_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_acute_care_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_snf_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_long_term_ac_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_other_ltc_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_peds_ind was str1 in the using data, but will be
byte now)
{p_end}
  - if _rc {c -(}
    if ("`generate'" != "") {c -(}
    capture quietly drop if `generate' > 0
    capture quietly drop `generate'
    {c )-}
    exit _rc
    {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    quietly replace `generate' = `filenum' in `filenumpos'/L
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - {c )-}
  {hline 79} end append {hline}

{com}. append using "${c -(}datadir{c )-}sonali_data_2015_1.dta", force 
{txt}  {hline 77} begin append {hline}
  - version 11
  - if (_caller() < 11) {c -(}
    local version : di "version " string(_caller()) ":"
    `version' _append `0'
    exit
    {c )-}
  - syntax [anything(everything)] [, GENerate(name) * ]
  - gettoken using filenames : anything
  - if (`"`using'"' != "using") {c -(}
  = if (`"using"' != "using") {c -(}
    di as err "using required"
    exit 100
    {c )-}
  - if (`"`filenames'"' == "") {c -(}
  = if (`" "/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2015_1.dta""' == "") {c -(}
    di as err "invalid file specification"
    exit 198
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture quietly describe using `"`filename'"'
  = capture quietly describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2015_1.dta"'
    {hline 73} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2015_1.dta"'
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 75} end describe {hline}
  - if (_rc) {c -(}
    di as err `"file `filename' not found"'
    exit 601
    {c )-}
  - {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    confirm new var `generate'
    local filenum 0
    gen byte `generate' = `filenum'
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture noisily _append using `"`filename'"', `options'
  = capture noisily _append using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2015_1.dta"', force
{p 0 7 2}
(note: variable
type_of_admission was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
spec_unit_4 was byte in the using data, but will be
str1 now)
{p_end}
{p 0 7 2}
(note: variable
pat_zip was str5 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
pat_age was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_1 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_2 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_3 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_4 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_5 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_6 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_7 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_8 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_9 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_10 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
princ_surg_proc_code was long in the using data, but will be
str6 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_1 was long in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_1 was long in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_2 was long in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_2 was long in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_3 was long in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_3 was long in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_4 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_4 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_7 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_7 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_8 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_8 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_9 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_9 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_10 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_10 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_13 was int in the using data, but will be
str4 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_14 was int in the using data, but will be
str4 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_15 was int in the using data, but will be
str4 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_16 was int in the using data, but will be
str4 now)
{p_end}
{p 0 7 2}
(note: variable
occur_day_6 was int in the using data, but will be
str4 now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_from_2 was int in the using data, but will be
str6 now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_thru_2 was byte in the using data, but will be
str6 now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_code_3 was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
condition_code_6 was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
condition_code_7 was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
value_code_7 was byte in the using data, but will be
str2 now)
{p_end}
{p 0 7 2}
(note: variable
value_code_8 was byte in the using data, but will be
str2 now)
{p_end}
{p 0 7 2}
(note: variable
fac_teaching_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_rehab_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_acute_care_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_snf_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_long_term_ac_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_other_ltc_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_peds_ind was str1 in the using data, but will be
byte now)
{p_end}
  - if _rc {c -(}
    if ("`generate'" != "") {c -(}
    capture quietly drop if `generate' > 0
    capture quietly drop `generate'
    {c )-}
    exit _rc
    {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    quietly replace `generate' = `filenum' in `filenumpos'/L
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - {c )-}
  {hline 79} end append {hline}

{com}. append using "${c -(}datadir{c )-}sonali_data_2015_2.dta", force 
{txt}  {hline 77} begin append {hline}
  - version 11
  - if (_caller() < 11) {c -(}
    local version : di "version " string(_caller()) ":"
    `version' _append `0'
    exit
    {c )-}
  - syntax [anything(everything)] [, GENerate(name) * ]
  - gettoken using filenames : anything
  - if (`"`using'"' != "using") {c -(}
  = if (`"using"' != "using") {c -(}
    di as err "using required"
    exit 100
    {c )-}
  - if (`"`filenames'"' == "") {c -(}
  = if (`" "/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2015_2.dta""' == "") {c -(}
    di as err "invalid file specification"
    exit 198
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture quietly describe using `"`filename'"'
  = capture quietly describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2015_2.dta"'
    {hline 73} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2015_2.dta"'
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 75} end describe {hline}
  - if (_rc) {c -(}
    di as err `"file `filename' not found"'
    exit 601
    {c )-}
  - {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    confirm new var `generate'
    local filenum 0
    gen byte `generate' = `filenum'
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture noisily _append using `"`filename'"', `options'
  = capture noisily _append using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2015_2.dta"', force
{p 0 7 2}
(note: variable
type_of_admission was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
spec_unit_4 was byte in the using data, but will be
str1 now)
{p_end}
{p 0 7 2}
(note: variable
pat_zip was str5 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
pat_age was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_1 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_2 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_3 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_4 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_5 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_6 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_7 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_8 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
princ_surg_proc_code was long in the using data, but will be
str6 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_1 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_1 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_2 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_2 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_3 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_3 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_4 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_4 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_7 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_7 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_8 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_8 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_9 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_9 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_10 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_10 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_13 was int in the using data, but will be
str4 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_14 was int in the using data, but will be
str4 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_15 was int in the using data, but will be
str4 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_16 was int in the using data, but will be
str4 now)
{p_end}
{p 0 7 2}
(note: variable
occur_day_6 was int in the using data, but will be
str4 now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_from_2 was byte in the using data, but will be
str6 now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_thru_2 was byte in the using data, but will be
str6 now)
{p_end}
{p 0 7 2}
(note: variable
condition_code_6 was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
value_code_7 was byte in the using data, but will be
str2 now)
{p_end}
{p 0 7 2}
(note: variable
value_code_8 was byte in the using data, but will be
str2 now)
{p_end}
{p 0 7 2}
(note: variable
fac_teaching_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_rehab_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_acute_care_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_snf_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_long_term_ac_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_other_ltc_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_peds_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
value_amount_6 was 
long, now double to accommodate using data's values)
{p_end}
  - if _rc {c -(}
    if ("`generate'" != "") {c -(}
    capture quietly drop if `generate' > 0
    capture quietly drop `generate'
    {c )-}
    exit _rc
    {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    quietly replace `generate' = `filenum' in `filenumpos'/L
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - {c )-}
  {hline 79} end append {hline}

{com}. append using "${c -(}datadir{c )-}sonali_data_2015_3.dta", force 
{txt}  {hline 77} begin append {hline}
  - version 11
  - if (_caller() < 11) {c -(}
    local version : di "version " string(_caller()) ":"
    `version' _append `0'
    exit
    {c )-}
  - syntax [anything(everything)] [, GENerate(name) * ]
  - gettoken using filenames : anything
  - if (`"`using'"' != "using") {c -(}
  = if (`"using"' != "using") {c -(}
    di as err "using required"
    exit 100
    {c )-}
  - if (`"`filenames'"' == "") {c -(}
  = if (`" "/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2015_3.dta""' == "") {c -(}
    di as err "invalid file specification"
    exit 198
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture quietly describe using `"`filename'"'
  = capture quietly describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2015_3.dta"'
    {hline 73} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2015_3.dta"'
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 75} end describe {hline}
  - if (_rc) {c -(}
    di as err `"file `filename' not found"'
    exit 601
    {c )-}
  - {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    confirm new var `generate'
    local filenum 0
    gen byte `generate' = `filenum'
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture noisily _append using `"`filename'"', `options'
  = capture noisily _append using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2015_3.dta"', force
{p 0 7 2}
(note: variable
pat_zip was str5 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
pat_age was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_1 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_2 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_3 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_4 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_5 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_6 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_7 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_8 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_9 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
e_code_10 was byte in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
princ_surg_proc_day was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_1 was long in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_1 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_1 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_2 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_2 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_2 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_3 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_3 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_3 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_4 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_4 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_5 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_6 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_7 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_7 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_7 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_8 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_8 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_9 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_9 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_10 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_10 was int in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_13 was int in the using data, but will be
str4 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_14 was int in the using data, but will be
str4 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_15 was int in the using data, but will be
str4 now)
{p_end}
{p 0 7 2}
(note: variable
oth_icd9_code_16 was int in the using data, but will be
str4 now)
{p_end}
{p 0 7 2}
(note: variable
occur_day_7 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
occur_day_8 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
occur_day_9 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
occur_day_10 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
condition_code_6 was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
condition_code_7 was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
value_code_7 was byte in the using data, but will be
str2 now)
{p_end}
{p 0 7 2}
(note: variable
value_code_8 was byte in the using data, but will be
str2 now)
{p_end}
{p 0 7 2}
(note: variable
fac_teaching_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_rehab_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_acute_care_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_snf_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_long_term_ac_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_other_ltc_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_peds_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
princ_surg_proc_code was 
str6, now str7 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_4 was 
str5, now str7 to accommodate using data's values)
{p_end}
  - if _rc {c -(}
    if ("`generate'" != "") {c -(}
    capture quietly drop if `generate' > 0
    capture quietly drop `generate'
    {c )-}
    exit _rc
    {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    quietly replace `generate' = `filenum' in `filenumpos'/L
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - {c )-}
  {hline 79} end append {hline}

{com}. append using "${c -(}datadir{c )-}sonali_data_2015_4.dta", force 
{txt}  {hline 77} begin append {hline}
  - version 11
  - if (_caller() < 11) {c -(}
    local version : di "version " string(_caller()) ":"
    `version' _append `0'
    exit
    {c )-}
  - syntax [anything(everything)] [, GENerate(name) * ]
  - gettoken using filenames : anything
  - if (`"`using'"' != "using") {c -(}
  = if (`"using"' != "using") {c -(}
    di as err "using required"
    exit 100
    {c )-}
  - if (`"`filenames'"' == "") {c -(}
  = if (`" "/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2015_4.dta""' == "") {c -(}
    di as err "invalid file specification"
    exit 198
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture quietly describe using `"`filename'"'
  = capture quietly describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2015_4.dta"'
    {hline 73} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2015_4.dta"'
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 75} end describe {hline}
  - if (_rc) {c -(}
    di as err `"file `filename' not found"'
    exit 601
    {c )-}
  - {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    confirm new var `generate'
    local filenum 0
    gen byte `generate' = `filenum'
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture noisily _append using `"`filename'"', `options'
  = capture noisily _append using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2015_4.dta"', force
{p 0 7 2}
(note: variable
type_of_admission was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
pat_zip was str5 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_1 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_2 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_3 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_4 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_5 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_6 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_7 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_8 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_9 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
princ_surg_proc_day was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_1 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_2 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_3 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_4 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_5 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_5 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_6 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_6 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_7 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_8 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_11 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_11 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_12 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_13 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_14 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_15 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_16 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_17 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_18 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_19 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_20 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_21 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_22 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_23 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_24 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
occur_day_6 was int in the using data, but will be
str4 now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_from_3 was str6 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_thru_3 was str6 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
condition_code_6 was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
value_code_8 was byte in the using data, but will be
str2 now)
{p_end}
{p 0 7 2}
(note: variable
fac_teaching_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_rehab_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_acute_care_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_snf_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_long_term_ac_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_other_ltc_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_peds_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
admitting_diagnosis was 
str6, now str7 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
princ_diag_code was 
str6, now str7 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
oth_diag_code_1 was 
str6, now str7 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
oth_diag_code_2 was 
str6, now str7 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
oth_diag_code_3 was 
str6, now str7 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
oth_diag_code_4 was 
str6, now str7 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
oth_diag_code_5 was 
str6, now str7 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
oth_diag_code_6 was 
str6, now str7 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
oth_diag_code_7 was 
str6, now str7 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
oth_diag_code_8 was 
str6, now str7 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
oth_diag_code_9 was 
str6, now str7 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
oth_diag_code_10 was 
str6, now str7 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
oth_diag_code_11 was 
str6, now str7 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
oth_diag_code_12 was 
str6, now str7 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
oth_diag_code_13 was 
str6, now str7 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
oth_diag_code_14 was 
str6, now str7 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
oth_diag_code_15 was 
str6, now str7 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
oth_diag_code_16 was 
str6, now str7 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
oth_diag_code_17 was 
str6, now str7 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
oth_diag_code_18 was 
str6, now str7 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
oth_diag_code_19 was 
str6, now str7 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
oth_diag_code_20 was 
str6, now str7 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
oth_diag_code_21 was 
str6, now str7 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
oth_diag_code_22 was 
str6, now str7 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
oth_diag_code_23 was 
str6, now str7 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
oth_diag_code_24 was 
str6, now str7 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
e_code_1 was 
str6, now str7 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
e_code_2 was 
str5, now str7 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
e_code_3 was 
str5, now str7 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
e_code_4 was 
str5, now str7 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
e_code_5 was 
str5, now str7 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
e_code_6 was 
str5, now str7 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
e_code_7 was 
str5, now str7 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
e_code_8 was 
str5, now str6 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
e_code_10 was 
str5, now str6 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_1 was 
str5, now str7 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_2 was 
str5, now str7 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_3 was 
str5, now str7 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_7 was 
str5, now str7 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_8 was 
str5, now str7 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_9 was 
str5, now str7 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_10 was 
str5, now str7 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
value_amount_7 was 
long, now double to accommodate using data's values)
{p_end}
  - if _rc {c -(}
    if ("`generate'" != "") {c -(}
    capture quietly drop if `generate' > 0
    capture quietly drop `generate'
    {c )-}
    exit _rc
    {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    quietly replace `generate' = `filenum' in `filenumpos'/L
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - {c )-}
  {hline 79} end append {hline}

{com}. append using "${c -(}datadir{c )-}sonali_data_2016_1.dta", force 
{txt}  {hline 77} begin append {hline}
  - version 11
  - if (_caller() < 11) {c -(}
    local version : di "version " string(_caller()) ":"
    `version' _append `0'
    exit
    {c )-}
  - syntax [anything(everything)] [, GENerate(name) * ]
  - gettoken using filenames : anything
  - if (`"`using'"' != "using") {c -(}
  = if (`"using"' != "using") {c -(}
    di as err "using required"
    exit 100
    {c )-}
  - if (`"`filenames'"' == "") {c -(}
  = if (`" "/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2016_1.dta""' == "") {c -(}
    di as err "invalid file specification"
    exit 198
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture quietly describe using `"`filename'"'
  = capture quietly describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2016_1.dta"'
    {hline 73} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2016_1.dta"'
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 75} end describe {hline}
  - if (_rc) {c -(}
    di as err `"file `filename' not found"'
    exit 601
    {c )-}
  - {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    confirm new var `generate'
    local filenum 0
    gen byte `generate' = `filenum'
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture noisily _append using `"`filename'"', `options'
  = capture noisily _append using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2016_1.dta"', force
{p 0 7 2}
(note: variable
spec_unit_4 was byte in the using data, but will be
str1 now)
{p_end}
{p 0 7 2}
(note: variable
pat_zip was str5 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
pat_age was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_1 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_2 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_3 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_4 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_5 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_6 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_7 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_8 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_10 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
princ_surg_proc_day was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_1 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_2 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_3 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_4 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_5 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_5 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_6 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_8 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_11 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_11 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_12 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_13 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_14 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_15 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_16 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_17 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_18 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_19 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_20 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_21 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_22 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_22 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_23 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_24 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
occur_day_6 was int in the using data, but will be
str4 now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_from_4 was str6 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_thru_4 was str6 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
condition_code_6 was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
value_code_7 was byte in the using data, but will be
str2 now)
{p_end}
{p 0 7 2}
(note: variable
value_code_9 was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_teaching_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_rehab_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_acute_care_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_snf_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_long_term_ac_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_other_ltc_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_peds_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
e_code_8 was 
str6, now str7 to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
value_amount_8 was 
long, now double to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
value_amount_9 was 
int, now float to accommodate using data's values)
{p_end}
{p 0 7 2}
(note: variable
icd10 was 
str1, now str5 to accommodate using data's values)
{p_end}
  - if _rc {c -(}
    if ("`generate'" != "") {c -(}
    capture quietly drop if `generate' > 0
    capture quietly drop `generate'
    {c )-}
    exit _rc
    {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    quietly replace `generate' = `filenum' in `filenumpos'/L
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - {c )-}
  {hline 79} end append {hline}

{com}. append using "${c -(}datadir{c )-}sonali_data_2016_2.dta", force 
{txt}  {hline 77} begin append {hline}
  - version 11
  - if (_caller() < 11) {c -(}
    local version : di "version " string(_caller()) ":"
    `version' _append `0'
    exit
    {c )-}
  - syntax [anything(everything)] [, GENerate(name) * ]
  - gettoken using filenames : anything
  - if (`"`using'"' != "using") {c -(}
  = if (`"using"' != "using") {c -(}
    di as err "using required"
    exit 100
    {c )-}
  - if (`"`filenames'"' == "") {c -(}
  = if (`" "/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2016_2.dta""' == "") {c -(}
    di as err "invalid file specification"
    exit 198
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture quietly describe using `"`filename'"'
  = capture quietly describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2016_2.dta"'
    {hline 73} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2016_2.dta"'
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 75} end describe {hline}
  - if (_rc) {c -(}
    di as err `"file `filename' not found"'
    exit 601
    {c )-}
  - {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    confirm new var `generate'
    local filenum 0
    gen byte `generate' = `filenum'
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture noisily _append using `"`filename'"', `options'
  = capture noisily _append using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2016_2.dta"', force
{p 0 7 2}
(note: variable
spec_unit_4 was byte in the using data, but will be
str1 now)
{p_end}
{p 0 7 2}
(note: variable
pat_zip was str5 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
pat_age was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_1 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_2 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_3 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_4 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_5 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_6 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_7 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_8 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
e_code_9 was byte in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
e_code_10 was byte in the using data, but will be
str6 now)
{p_end}
{p 0 7 2}
(note: variable
princ_surg_proc_day was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_1 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_2 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_3 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_4 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_5 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_5 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_6 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_6 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_7 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_8 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_9 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_10 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_11 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_11 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_12 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_13 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_14 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_15 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_16 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_17 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_18 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_19 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_20 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_20 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_21 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_21 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_22 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_22 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_23 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_23 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_24 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_24 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
occur_day_6 was int in the using data, but will be
str4 now)
{p_end}
{p 0 7 2}
(note: variable
condition_code_6 was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_teaching_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_rehab_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_acute_care_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_snf_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_long_term_ac_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_other_ltc_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_peds_ind was str1 in the using data, but will be
byte now)
{p_end}
  - if _rc {c -(}
    if ("`generate'" != "") {c -(}
    capture quietly drop if `generate' > 0
    capture quietly drop `generate'
    {c )-}
    exit _rc
    {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    quietly replace `generate' = `filenum' in `filenumpos'/L
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - {c )-}
  {hline 79} end append {hline}

{com}. append using "${c -(}datadir{c )-}sonali_data_2016_3.dta", force 
{txt}  {hline 77} begin append {hline}
  - version 11
  - if (_caller() < 11) {c -(}
    local version : di "version " string(_caller()) ":"
    `version' _append `0'
    exit
    {c )-}
  - syntax [anything(everything)] [, GENerate(name) * ]
  - gettoken using filenames : anything
  - if (`"`using'"' != "using") {c -(}
  = if (`"using"' != "using") {c -(}
    di as err "using required"
    exit 100
    {c )-}
  - if (`"`filenames'"' == "") {c -(}
  = if (`" "/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2016_3.dta""' == "") {c -(}
    di as err "invalid file specification"
    exit 198
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture quietly describe using `"`filename'"'
  = capture quietly describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2016_3.dta"'
    {hline 73} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2016_3.dta"'
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 75} end describe {hline}
  - if (_rc) {c -(}
    di as err `"file `filename' not found"'
    exit 601
    {c )-}
  - {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    confirm new var `generate'
    local filenum 0
    gen byte `generate' = `filenum'
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture noisily _append using `"`filename'"', `options'
  = capture noisily _append using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2016_3.dta"', force
{p 0 7 2}
(note: variable
spec_unit_4 was byte in the using data, but will be
str1 now)
{p_end}
{p 0 7 2}
(note: variable
pat_zip was str5 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
pat_age was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_1 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_2 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_3 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_4 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_5 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_6 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_7 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_8 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_9 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
e_code_10 was byte in the using data, but will be
str6 now)
{p_end}
{p 0 7 2}
(note: variable
princ_surg_proc_day was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_1 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_2 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_3 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_4 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_5 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_5 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_6 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_6 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_7 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_11 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_12 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_13 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_14 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_15 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_16 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_17 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_18 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_19 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_20 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_21 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_22 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_23 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_24 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
occur_day_6 was int in the using data, but will be
str4 now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_code_3 was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_from_3 was str6 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_thru_3 was str6 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
condition_code_6 was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_teaching_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_rehab_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_acute_care_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_snf_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_long_term_ac_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_other_ltc_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_peds_ind was str1 in the using data, but will be
byte now)
{p_end}
  - if _rc {c -(}
    if ("`generate'" != "") {c -(}
    capture quietly drop if `generate' > 0
    capture quietly drop `generate'
    {c )-}
    exit _rc
    {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    quietly replace `generate' = `filenum' in `filenumpos'/L
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - {c )-}
  {hline 79} end append {hline}

{com}. append using "${c -(}datadir{c )-}sonali_data_2016_4.dta", force 
{txt}  {hline 77} begin append {hline}
  - version 11
  - if (_caller() < 11) {c -(}
    local version : di "version " string(_caller()) ":"
    `version' _append `0'
    exit
    {c )-}
  - syntax [anything(everything)] [, GENerate(name) * ]
  - gettoken using filenames : anything
  - if (`"`using'"' != "using") {c -(}
  = if (`"using"' != "using") {c -(}
    di as err "using required"
    exit 100
    {c )-}
  - if (`"`filenames'"' == "") {c -(}
  = if (`" "/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2016_4.dta""' == "") {c -(}
    di as err "invalid file specification"
    exit 198
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture quietly describe using `"`filename'"'
  = capture quietly describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2016_4.dta"'
    {hline 73} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2016_4.dta"'
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 75} end describe {hline}
  - if (_rc) {c -(}
    di as err `"file `filename' not found"'
    exit 601
    {c )-}
  - {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    confirm new var `generate'
    local filenum 0
    gen byte `generate' = `filenum'
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture noisily _append using `"`filename'"', `options'
  = capture noisily _append using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2016_4.dta"', force
{p 0 7 2}
(note: variable
pat_zip was str5 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
pat_status was byte in the using data, but will be
str2 now)
{p_end}
{p 0 7 2}
(note: variable
pat_age was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_1 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_2 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_3 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_4 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_5 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_6 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_7 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_8 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
e_code_9 was byte in the using data, but will be
str5 now)
{p_end}
{p 0 7 2}
(note: variable
e_code_10 was byte in the using data, but will be
str6 now)
{p_end}
{p 0 7 2}
(note: variable
princ_surg_proc_day was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_1 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_2 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_3 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_4 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_5 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_6 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_6 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_11 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_11 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_12 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_13 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_14 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_15 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_16 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_17 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_18 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_19 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_20 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_21 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_22 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_22 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_23 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_24 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
occur_day_6 was int in the using data, but will be
str4 now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_code_3 was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_from_4 was str6 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_thru_4 was str6 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
condition_code_6 was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
value_code_7 was byte in the using data, but will be
str2 now)
{p_end}
{p 0 7 2}
(note: variable
value_code_8 was byte in the using data, but will be
str2 now)
{p_end}
{p 0 7 2}
(note: variable
fac_teaching_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_rehab_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_acute_care_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_snf_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_long_term_ac_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_other_ltc_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_peds_ind was str1 in the using data, but will be
byte now)
{p_end}
  - if _rc {c -(}
    if ("`generate'" != "") {c -(}
    capture quietly drop if `generate' > 0
    capture quietly drop `generate'
    {c )-}
    exit _rc
    {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    quietly replace `generate' = `filenum' in `filenumpos'/L
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - {c )-}
  {hline 79} end append {hline}

{com}. append using "${c -(}datadir{c )-}sonali_data_2017_1.dta", force 
{txt}  {hline 77} begin append {hline}
  - version 11
  - if (_caller() < 11) {c -(}
    local version : di "version " string(_caller()) ":"
    `version' _append `0'
    exit
    {c )-}
  - syntax [anything(everything)] [, GENerate(name) * ]
  - gettoken using filenames : anything
  - if (`"`using'"' != "using") {c -(}
  = if (`"using"' != "using") {c -(}
    di as err "using required"
    exit 100
    {c )-}
  - if (`"`filenames'"' == "") {c -(}
  = if (`" "/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2017_1.dta""' == "") {c -(}
    di as err "invalid file specification"
    exit 198
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture quietly describe using `"`filename'"'
  = capture quietly describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2017_1.dta"'
    {hline 73} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2017_1.dta"'
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 75} end describe {hline}
  - if (_rc) {c -(}
    di as err `"file `filename' not found"'
    exit 601
    {c )-}
  - {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    confirm new var `generate'
    local filenum 0
    gen byte `generate' = `filenum'
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture noisily _append using `"`filename'"', `options'
  = capture noisily _append using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2017_1.dta"', force
{p 0 7 2}
(note: variable
spec_unit_4 was byte in the using data, but will be
str1 now)
{p_end}
{p 0 7 2}
(note: variable
pat_zip was str5 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
pat_status was byte in the using data, but will be
str2 now)
{p_end}
{p 0 7 2}
(note: variable
pat_age was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_1 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_2 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_3 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_4 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_5 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_6 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_7 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_8 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_9 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
e_code_10 was byte in the using data, but will be
str6 now)
{p_end}
{p 0 7 2}
(note: variable
princ_surg_proc_day was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_1 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_2 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_3 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_4 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_5 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_5 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_6 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_6 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_7 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_8 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_11 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_11 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_12 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_13 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_14 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_15 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_16 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_17 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_18 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_19 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_20 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_21 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_22 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_22 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_23 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_24 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
occur_day_6 was int in the using data, but will be
str4 now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_code_3 was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
condition_code_6 was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
condition_code_7 was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
value_code_8 was byte in the using data, but will be
str2 now)
{p_end}
{p 0 7 2}
(note: variable
fac_teaching_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_rehab_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_acute_care_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_snf_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_long_term_ac_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_other_ltc_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_peds_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
e_code_9 was 
str5, now str7 to accommodate using data's values)
{p_end}
  - if _rc {c -(}
    if ("`generate'" != "") {c -(}
    capture quietly drop if `generate' > 0
    capture quietly drop `generate'
    {c )-}
    exit _rc
    {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    quietly replace `generate' = `filenum' in `filenumpos'/L
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - {c )-}
  {hline 79} end append {hline}

{com}. append using "${c -(}datadir{c )-}sonali_data_2017_2.dta", force 
{txt}  {hline 77} begin append {hline}
  - version 11
  - if (_caller() < 11) {c -(}
    local version : di "version " string(_caller()) ":"
    `version' _append `0'
    exit
    {c )-}
  - syntax [anything(everything)] [, GENerate(name) * ]
  - gettoken using filenames : anything
  - if (`"`using'"' != "using") {c -(}
  = if (`"using"' != "using") {c -(}
    di as err "using required"
    exit 100
    {c )-}
  - if (`"`filenames'"' == "") {c -(}
  = if (`" "/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2017_2.dta""' == "") {c -(}
    di as err "invalid file specification"
    exit 198
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture quietly describe using `"`filename'"'
  = capture quietly describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2017_2.dta"'
    {hline 73} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2017_2.dta"'
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 75} end describe {hline}
  - if (_rc) {c -(}
    di as err `"file `filename' not found"'
    exit 601
    {c )-}
  - {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    confirm new var `generate'
    local filenum 0
    gen byte `generate' = `filenum'
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture noisily _append using `"`filename'"', `options'
  = capture noisily _append using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2017_2.dta"', force
{p 0 7 2}
(note: variable
spec_unit_4 was byte in the using data, but will be
str1 now)
{p_end}
{p 0 7 2}
(note: variable
pat_zip was str5 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
pat_age was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_1 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_2 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_3 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_4 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_5 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_6 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_7 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
e_code_9 was byte in the using data, but will be
str7 now)
{p_end}
{p 0 7 2}
(note: variable
e_code_10 was byte in the using data, but will be
str6 now)
{p_end}
{p 0 7 2}
(note: variable
princ_surg_proc_day was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_1 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_2 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_3 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_4 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_5 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_6 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_8 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_11 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_11 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_12 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_13 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_14 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_15 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_16 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_17 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_18 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_19 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_20 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_21 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_22 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_23 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_24 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
occur_day_6 was int in the using data, but will be
str4 now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_code_3 was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_from_3 was str6 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_thru_3 was str6 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
condition_code_6 was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
value_code_8 was byte in the using data, but will be
str2 now)
{p_end}
{p 0 7 2}
(note: variable
fac_teaching_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_rehab_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_acute_care_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_snf_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_long_term_ac_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_other_ltc_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_peds_ind was str1 in the using data, but will be
byte now)
{p_end}
  - if _rc {c -(}
    if ("`generate'" != "") {c -(}
    capture quietly drop if `generate' > 0
    capture quietly drop `generate'
    {c )-}
    exit _rc
    {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    quietly replace `generate' = `filenum' in `filenumpos'/L
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - {c )-}
  {hline 79} end append {hline}

{com}. append using "${c -(}datadir{c )-}sonali_data_2017_3.dta", force 
{txt}  {hline 77} begin append {hline}
  - version 11
  - if (_caller() < 11) {c -(}
    local version : di "version " string(_caller()) ":"
    `version' _append `0'
    exit
    {c )-}
  - syntax [anything(everything)] [, GENerate(name) * ]
  - gettoken using filenames : anything
  - if (`"`using'"' != "using") {c -(}
  = if (`"using"' != "using") {c -(}
    di as err "using required"
    exit 100
    {c )-}
  - if (`"`filenames'"' == "") {c -(}
  = if (`" "/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2017_3.dta""' == "") {c -(}
    di as err "invalid file specification"
    exit 198
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture quietly describe using `"`filename'"'
  = capture quietly describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2017_3.dta"'
    {hline 73} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2017_3.dta"'
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 75} end describe {hline}
  - if (_rc) {c -(}
    di as err `"file `filename' not found"'
    exit 601
    {c )-}
  - {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    confirm new var `generate'
    local filenum 0
    gen byte `generate' = `filenum'
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture noisily _append using `"`filename'"', `options'
  = capture noisily _append using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2017_3.dta"', force
{p 0 7 2}
(note: variable
type_of_admission was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
spec_unit_4 was byte in the using data, but will be
str1 now)
{p_end}
{p 0 7 2}
(note: variable
pat_zip was str5 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
pat_age was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_1 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_2 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_3 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_4 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_5 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_6 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_7 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_8 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_9 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
e_code_10 was byte in the using data, but will be
str6 now)
{p_end}
{p 0 7 2}
(note: variable
princ_surg_proc_day was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_1 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_2 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_3 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_4 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_5 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_6 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_11 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_11 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_12 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_13 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_13 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_14 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_15 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_16 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_17 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_18 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_19 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_20 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_21 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_22 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_23 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_24 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
occur_day_4 was int in the using data, but will be
str4 now)
{p_end}
{p 0 7 2}
(note: variable
occur_day_6 was int in the using data, but will be
str4 now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_from_2 was byte in the using data, but will be
str6 now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_thru_2 was byte in the using data, but will be
str6 now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_from_3 was str6 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_thru_3 was str6 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
value_code_8 was byte in the using data, but will be
str2 now)
{p_end}
{p 0 7 2}
(note: variable
fac_teaching_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_rehab_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_acute_care_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_snf_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_long_term_ac_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_other_ltc_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_peds_ind was str1 in the using data, but will be
byte now)
{p_end}
  - if _rc {c -(}
    if ("`generate'" != "") {c -(}
    capture quietly drop if `generate' > 0
    capture quietly drop `generate'
    {c )-}
    exit _rc
    {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    quietly replace `generate' = `filenum' in `filenumpos'/L
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - {c )-}
  {hline 79} end append {hline}

{com}. append using "${c -(}datadir{c )-}sonali_data_2017_4.dta", force 
{txt}  {hline 77} begin append {hline}
  - version 11
  - if (_caller() < 11) {c -(}
    local version : di "version " string(_caller()) ":"
    `version' _append `0'
    exit
    {c )-}
  - syntax [anything(everything)] [, GENerate(name) * ]
  - gettoken using filenames : anything
  - if (`"`using'"' != "using") {c -(}
  = if (`"using"' != "using") {c -(}
    di as err "using required"
    exit 100
    {c )-}
  - if (`"`filenames'"' == "") {c -(}
  = if (`" "/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2017_4.dta""' == "") {c -(}
    di as err "invalid file specification"
    exit 198
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture quietly describe using `"`filename'"'
  = capture quietly describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2017_4.dta"'
    {hline 73} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2017_4.dta"'
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 75} end describe {hline}
  - if (_rc) {c -(}
    di as err `"file `filename' not found"'
    exit 601
    {c )-}
  - {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    confirm new var `generate'
    local filenum 0
    gen byte `generate' = `filenum'
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture noisily _append using `"`filename'"', `options'
  = capture noisily _append using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2017_4.dta"', force
{p 0 7 2}
(note: variable
spec_unit_4 was byte in the using data, but will be
str1 now)
{p_end}
{p 0 7 2}
(note: variable
pat_zip was str5 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
pat_age was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_1 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_2 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_3 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_4 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_5 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_6 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_7 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_8 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
e_code_10 was byte in the using data, but will be
str6 now)
{p_end}
{p 0 7 2}
(note: variable
princ_surg_proc_day was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_1 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_2 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_3 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_5 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_6 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_11 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_11 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_12 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_13 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_14 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_15 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_16 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_17 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_18 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_19 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_20 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_21 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_22 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_23 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_24 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
occur_day_6 was int in the using data, but will be
str4 now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_from_3 was str6 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_thru_3 was str6 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
value_code_9 was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_teaching_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_rehab_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_acute_care_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_snf_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_long_term_ac_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_other_ltc_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_peds_ind was str1 in the using data, but will be
byte now)
{p_end}
  - if _rc {c -(}
    if ("`generate'" != "") {c -(}
    capture quietly drop if `generate' > 0
    capture quietly drop `generate'
    {c )-}
    exit _rc
    {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    quietly replace `generate' = `filenum' in `filenumpos'/L
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - {c )-}
  {hline 79} end append {hline}

{com}. append using "${c -(}datadir{c )-}sonali_data_2018_1.dta", force 
{txt}  {hline 77} begin append {hline}
  - version 11
  - if (_caller() < 11) {c -(}
    local version : di "version " string(_caller()) ":"
    `version' _append `0'
    exit
    {c )-}
  - syntax [anything(everything)] [, GENerate(name) * ]
  - gettoken using filenames : anything
  - if (`"`using'"' != "using") {c -(}
  = if (`"using"' != "using") {c -(}
    di as err "using required"
    exit 100
    {c )-}
  - if (`"`filenames'"' == "") {c -(}
  = if (`" "/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2018_1.dta""' == "") {c -(}
    di as err "invalid file specification"
    exit 198
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture quietly describe using `"`filename'"'
  = capture quietly describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2018_1.dta"'
    {hline 73} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2018_1.dta"'
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 75} end describe {hline}
  - if (_rc) {c -(}
    di as err `"file `filename' not found"'
    exit 601
    {c )-}
  - {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    confirm new var `generate'
    local filenum 0
    gen byte `generate' = `filenum'
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture noisily _append using `"`filename'"', `options'
  = capture noisily _append using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2018_1.dta"', force
{p 0 7 2}
(note: variable
spec_unit_4 was byte in the using data, but will be
str1 now)
{p_end}
{p 0 7 2}
(note: variable
pat_zip was str5 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
pat_age was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_1 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_2 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_3 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_4 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_5 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_6 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_7 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_8 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
e_code_9 was byte in the using data, but will be
str7 now)
{p_end}
{p 0 7 2}
(note: variable
e_code_10 was byte in the using data, but will be
str6 now)
{p_end}
{p 0 7 2}
(note: variable
princ_surg_proc_day was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_5 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_6 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_6 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_7 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_10 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_11 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_11 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_12 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_13 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_14 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_15 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_16 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_17 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_18 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_19 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_20 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_21 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_22 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_23 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_24 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
occur_day_6 was int in the using data, but will be
str4 now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_from_3 was str6 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_thru_3 was str6 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_from_4 was str6 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_thru_4 was str6 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
value_code_9 was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_teaching_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_rehab_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_acute_care_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_snf_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_long_term_ac_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_other_ltc_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_peds_ind was str1 in the using data, but will be
byte now)
{p_end}
  - if _rc {c -(}
    if ("`generate'" != "") {c -(}
    capture quietly drop if `generate' > 0
    capture quietly drop `generate'
    {c )-}
    exit _rc
    {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    quietly replace `generate' = `filenum' in `filenumpos'/L
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - {c )-}
  {hline 79} end append {hline}

{com}. append using "${c -(}datadir{c )-}sonali_data_2018_2.dta", force 
{txt}  {hline 77} begin append {hline}
  - version 11
  - if (_caller() < 11) {c -(}
    local version : di "version " string(_caller()) ":"
    `version' _append `0'
    exit
    {c )-}
  - syntax [anything(everything)] [, GENerate(name) * ]
  - gettoken using filenames : anything
  - if (`"`using'"' != "using") {c -(}
  = if (`"using"' != "using") {c -(}
    di as err "using required"
    exit 100
    {c )-}
  - if (`"`filenames'"' == "") {c -(}
  = if (`" "/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2018_2.dta""' == "") {c -(}
    di as err "invalid file specification"
    exit 198
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture quietly describe using `"`filename'"'
  = capture quietly describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2018_2.dta"'
    {hline 73} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2018_2.dta"'
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 75} end describe {hline}
  - if (_rc) {c -(}
    di as err `"file `filename' not found"'
    exit 601
    {c )-}
  - {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    confirm new var `generate'
    local filenum 0
    gen byte `generate' = `filenum'
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture noisily _append using `"`filename'"', `options'
  = capture noisily _append using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2018_2.dta"', force
{p 0 7 2}
(note: variable
spec_unit_4 was byte in the using data, but will be
str1 now)
{p_end}
{p 0 7 2}
(note: variable
pat_zip was str5 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
pat_age was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_1 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_2 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_3 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_4 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_5 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_6 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_7 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_8 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_9 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
princ_surg_proc_day was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_1 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_2 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_3 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_4 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_5 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_5 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_6 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_11 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_12 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_13 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_14 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_15 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_16 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_17 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_18 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_19 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_20 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_21 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_22 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_23 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_24 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
occur_day_6 was int in the using data, but will be
str4 now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_from_3 was str6 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_thru_3 was str6 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_from_4 was str6 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_thru_4 was str6 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
condition_code_6 was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
value_code_8 was byte in the using data, but will be
str2 now)
{p_end}
{p 0 7 2}
(note: variable
fac_teaching_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_rehab_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_acute_care_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_snf_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_long_term_ac_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_other_ltc_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_peds_ind was str1 in the using data, but will be
byte now)
{p_end}
  - if _rc {c -(}
    if ("`generate'" != "") {c -(}
    capture quietly drop if `generate' > 0
    capture quietly drop `generate'
    {c )-}
    exit _rc
    {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    quietly replace `generate' = `filenum' in `filenumpos'/L
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - {c )-}
  {hline 79} end append {hline}

{com}. append using "${c -(}datadir{c )-}sonali_data_2018_3.dta", force 
{txt}  {hline 77} begin append {hline}
  - version 11
  - if (_caller() < 11) {c -(}
    local version : di "version " string(_caller()) ":"
    `version' _append `0'
    exit
    {c )-}
  - syntax [anything(everything)] [, GENerate(name) * ]
  - gettoken using filenames : anything
  - if (`"`using'"' != "using") {c -(}
  = if (`"using"' != "using") {c -(}
    di as err "using required"
    exit 100
    {c )-}
  - if (`"`filenames'"' == "") {c -(}
  = if (`" "/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2018_3.dta""' == "") {c -(}
    di as err "invalid file specification"
    exit 198
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture quietly describe using `"`filename'"'
  = capture quietly describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2018_3.dta"'
    {hline 73} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2018_3.dta"'
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 75} end describe {hline}
  - if (_rc) {c -(}
    di as err `"file `filename' not found"'
    exit 601
    {c )-}
  - {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    confirm new var `generate'
    local filenum 0
    gen byte `generate' = `filenum'
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture noisily _append using `"`filename'"', `options'
  = capture noisily _append using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2018_3.dta"', force
{p 0 7 2}
(note: variable
spec_unit_4 was byte in the using data, but will be
str1 now)
{p_end}
{p 0 7 2}
(note: variable
pat_zip was str5 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
pat_age was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_1 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_2 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_3 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_4 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_5 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_6 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_7 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_8 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_9 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_1 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_2 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_3 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_5 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_6 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_11 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_12 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_13 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_14 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_15 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_16 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_17 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_18 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_19 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_20 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_21 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_22 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_23 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_24 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
occur_day_4 was int in the using data, but will be
str4 now)
{p_end}
{p 0 7 2}
(note: variable
occur_day_5 was int in the using data, but will be
str4 now)
{p_end}
{p 0 7 2}
(note: variable
occur_day_6 was int in the using data, but will be
str4 now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_from_3 was str6 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_thru_3 was str6 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_from_4 was str6 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_thru_4 was str6 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_teaching_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_rehab_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_acute_care_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_snf_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_long_term_ac_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_other_ltc_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_peds_ind was str1 in the using data, but will be
byte now)
{p_end}
  - if _rc {c -(}
    if ("`generate'" != "") {c -(}
    capture quietly drop if `generate' > 0
    capture quietly drop `generate'
    {c )-}
    exit _rc
    {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    quietly replace `generate' = `filenum' in `filenumpos'/L
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - {c )-}
  {hline 79} end append {hline}

{com}. append using "${c -(}datadir{c )-}sonali_data_2018_4.dta", force 
{txt}  {hline 77} begin append {hline}
  - version 11
  - if (_caller() < 11) {c -(}
    local version : di "version " string(_caller()) ":"
    `version' _append `0'
    exit
    {c )-}
  - syntax [anything(everything)] [, GENerate(name) * ]
  - gettoken using filenames : anything
  - if (`"`using'"' != "using") {c -(}
  = if (`"using"' != "using") {c -(}
    di as err "using required"
    exit 100
    {c )-}
  - if (`"`filenames'"' == "") {c -(}
  = if (`" "/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2018_4.dta""' == "") {c -(}
    di as err "invalid file specification"
    exit 198
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture quietly describe using `"`filename'"'
  = capture quietly describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2018_4.dta"'
    {hline 73} begin describe {hline}
    - version 9
    - local version : di "version " string(_caller()) ":"
    - syntax [anything] [using] [, SImple REPLACE *]
    - if ("`replace'"!="") {c -(}
    = if (""!="") {c -(}
      describe_mk `0'
      return add
      exit
      {c )-}
    - local varlist `"`anything'"'
    = local varlist `""'
    - if ("`simple'" == "") {c -(}
    = if ("" == "") {c -(}
    - `version' _describe `0'
    = version 11: _describe using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2018_4.dta"'
    - return add
    - {c )-}
    - else {c -(}
      if (`"`options'"' != "") {c -(}
      di as err "simple may not be combined with other options"
      exit 198
      {c )-}
      if (`"`using'"' != "") {c -(}
      qui `version' describe `varlist' `using', varlist
      if "`varlist'" == "" {c -(}
      local vars "`r(varlist)'"
      {c )-}
      else {c -(}
      local vars "`varlist'"
      {c )-}
      local wid = 2
      local n : list sizeof vars
      if `n'==0 {c -(}
      exit
      {c )-}
      if "`c(hasicu)'" == "1" {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', udstrlen(`"`x'"'))
      {c )-}
      {c )-}
      else {c -(}
      foreach x of local vars {c -(}
      local wid = max(`wid', strlen(`"`x'"'))
      {c )-}
      {c )-}
      local wid = `wid' + 2
      local cols = int((`c(linesize)'+1)/`wid')
      if `cols' < 2 {c -(}
      foreach x of local `vars' {c -(}
      di as txt `col' `"`x'"'
      {c )-}
      exit
      {c )-}
      local lines = `n'/`cols'
      local lines = int(cond(`lines'>int(`lines'), `lines'+1, `lines'))
      forvalues i=1(1)`lines' {c -(}
      local top = min((`cols')*`lines'+`i', `n')
      local col = 1
      forvalues j=`i'(`lines')`top' {c -(}
      local x : word `j' of `vars'
      di as txt _column(`col') "`x'" _c
      local col = `col' + `wid'
      {c )-}
      di as txt
      {c )-}
      qui `version' describe `varlist' `using', short
      return add
      {c )-}
      else {c -(}
      ds `varlist'
      qui `version' _describe `varlist', short
      return add
      {c )-}
      {c )-}
    {hline 75} end describe {hline}
  - if (_rc) {c -(}
    di as err `"file `filename' not found"'
    exit 601
    {c )-}
  - {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    confirm new var `generate'
    local filenum 0
    gen byte `generate' = `filenum'
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - foreach filename of local filenames {c -(}
  - capture noisily _append using `"`filename'"', `options'
  = capture noisily _append using `"/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz/sonali_data_2018_4.dta"', force
{p 0 7 2}
(note: variable
spec_unit_4 was byte in the using data, but will be
str1 now)
{p_end}
{p 0 7 2}
(note: variable
pat_zip was str5 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
pat_age was str2 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_1 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_2 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_3 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_4 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_5 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_6 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_7 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_8 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_9 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
poa_e_code_10 was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
princ_surg_proc_day was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_1 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_5 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_5 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_6 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_day_6 was str4 in the using data, but will be
int now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_11 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_12 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_13 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_14 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_15 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_16 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_17 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_18 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_19 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_20 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_21 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_22 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_23 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
oth_surg_proc_code_24 was str7 in the using data, but will be
long now)
{p_end}
{p 0 7 2}
(note: variable
occur_day_6 was int in the using data, but will be
str4 now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_from_3 was str6 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_thru_3 was str6 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_from_4 was str6 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
occur_span_thru_4 was str6 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
value_code_8 was byte in the using data, but will be
str2 now)
{p_end}
{p 0 7 2}
(note: variable
fac_teaching_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_rehab_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_acute_care_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_snf_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_long_term_ac_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_other_ltc_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
fac_peds_ind was str1 in the using data, but will be
byte now)
{p_end}
{p 0 7 2}
(note: variable
e_code_10 was 
str6, now str7 to accommodate using data's values)
{p_end}
  - if _rc {c -(}
    if ("`generate'" != "") {c -(}
    capture quietly drop if `generate' > 0
    capture quietly drop `generate'
    {c )-}
    exit _rc
    {c )-}
  - if ("`generate'" != "") {c -(}
  = if ("" != "") {c -(}
    quietly replace `generate' = `filenum' in `filenumpos'/L
    local ++filenum
    local filenumpos = _N + 1
    {c )-}
  - {c )-}
  {hline 79} end append {hline}

{com}. 
. 
. **************************************************************************
. ** KEY FINDINGS: CONFIDENCE INTERVALS OF DIAGNOSES BASED ON RACE AND FACILITY TYPE**
. 
. table nrace, c(m schizophrenia sem schizophrenia) 
{txt}  {hline 78} begin table {hline}
  - version 7.0, missing
  - syntax varlist(max=3) [if] [in] [fw aw pw iw] [, BY(varlist) COLumn CW Format(string) Name(string) REPLACE ROW SColumn markdown Contents(string) CELLwidth(string) *]
{err}variable {bf}nrace{sf} not found
{txt}  {hline 80} end table {hline}
{search r(111), local:r(111);}

end of do-file

{search r(111), local:r(111);}

{com}. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/Users/austinbean/Google Drive/Texas PUDF Zipped Backup Files/other_analyses/DiRienz//sonali_analysis.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res}17 Apr 2021, 20:16:55
{txt}{.-}
{smcl}
{txt}{sf}{ul off}